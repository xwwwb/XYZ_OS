[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_write_mem8
	EXTERN	_io_hlt
[FILE "demo.c"]
[SECTION .text]
	GLOBAL	_setColor
_setColor:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [12+EBP]
	MOV	EDX,DWORD [16+EBP]
	IMUL	EAX,EAX,320
	ADD	EAX,DWORD [8+EBP]
	MOV	DWORD [12+EBP],EDX
	ADD	EAX,655360
	MOV	DWORD [8+EBP],EAX
	POP	EBP
	JMP	_write_mem8
	GLOBAL	_drawFullCircle
_drawFullCircle:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,20
	MOV	EAX,DWORD [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [-20+EBP],EAX
	LEA	ESI,DWORD [160+EDI]
	PUSH	EAX
	MOV	EBX,DWORD [-16+EBP]
	ADD	EBX,100
	PUSH	EBX
	PUSH	ESI
	CALL	_setColor
	MOV	EAX,100
	PUSH	DWORD [-20+EBP]
	SUB	EAX,DWORD [-16+EBP]
	MOV	DWORD [-24+EBP],EAX
	PUSH	EAX
	PUSH	ESI
	MOV	ESI,160
	SUB	ESI,EDI
	CALL	_setColor
	PUSH	DWORD [-20+EBP]
	PUSH	EBX
	PUSH	ESI
	CALL	_setColor
	ADD	ESP,36
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [-24+EBP]
	PUSH	ESI
	CALL	_setColor
	LEA	EAX,DWORD [100+EDI]
	PUSH	DWORD [-20+EBP]
	MOV	DWORD [-28+EBP],EAX
	PUSH	EAX
	MOV	ESI,DWORD [-16+EBP]
	ADD	ESI,160
	PUSH	ESI
	CALL	_setColor
	PUSH	DWORD [-20+EBP]
	MOV	DWORD [-32+EBP],100
	SUB	DWORD [-32+EBP],EDI
	PUSH	DWORD [-32+EBP]
	PUSH	ESI
	MOV	ESI,160
	CALL	_setColor
	ADD	ESP,36
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [-28+EBP]
	SUB	ESI,DWORD [-16+EBP]
	PUSH	ESI
	CALL	_setColor
	MOV	DWORD [8+EBP],ESI
	MOV	EAX,DWORD [-20+EBP]
	ADD	ESP,12
	MOV	DWORD [16+EBP],EAX
	MOV	EAX,DWORD [-32+EBP]
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_setColor
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	EDI,EDI
	PUSH	EBX
	XOR	ESI,ESI
	PUSH	EAX
	MOV	EBX,15
	PUSH	EAX
L8:
	MOV	EAX,EBX
	MOV	ECX,16
	CDQ
	IDIV	ECX
	MOV	EBX,EDX
	INC	EBX
	MOV	BYTE [655360+EDI+ESI*1],BL
	INC	ESI
	ADD	EDI,320
	CMP	ESI,319
	JLE	L8
	XOR	ESI,ESI
L13:
	MOV	EAX,EBX
	MOV	ECX,16
	CDQ
	IDIV	ECX
	MOV	EBX,EDX
	LEA	EAX,DWORD [20+ESI]
	INC	EBX
	INC	ESI
	PUSH	EBX
	PUSH	20
	PUSH	EAX
	CALL	_setColor
	ADD	ESP,12
	CMP	ESI,99
	JLE	L13
	XOR	ESI,ESI
L18:
	MOV	EAX,EBX
	MOV	ECX,16
	CDQ
	IDIV	ECX
	MOV	EBX,EDX
	LEA	EAX,DWORD [20+ESI]
	INC	EBX
	INC	ESI
	PUSH	EBX
	PUSH	EAX
	PUSH	20
	CALL	_setColor
	ADD	ESP,12
	CMP	ESI,49
	JLE	L18
	XOR	ESI,ESI
L23:
	MOV	EAX,EBX
	MOV	ECX,16
	CDQ
	IDIV	ECX
	MOV	EBX,EDX
	LEA	EAX,DWORD [20+ESI]
	INC	EBX
	INC	ESI
	PUSH	EBX
	PUSH	EAX
	PUSH	120
	CALL	_setColor
	ADD	ESP,12
	CMP	ESI,49
	JLE	L23
	XOR	ESI,ESI
L28:
	MOV	EAX,EBX
	MOV	ECX,16
	CDQ
	IDIV	ECX
	MOV	EBX,EDX
	LEA	EAX,DWORD [20+ESI]
	INC	EBX
	INC	ESI
	PUSH	EBX
	PUSH	70
	PUSH	EAX
	CALL	_setColor
	ADD	ESP,12
	CMP	ESI,99
	JLE	L28
	XOR	ESI,ESI
	MOV	EDI,50
	MOV	DWORD [-16+EBP],-49
L34:
	MOV	EAX,EBX
	MOV	ECX,16
	CDQ
	IDIV	ECX
	MOV	EBX,EDX
	INC	EBX
	PUSH	EBX
	PUSH	EDI
	PUSH	ESI
	CALL	_drawFullCircle
	ADD	ESP,12
	CMP	DWORD [-16+EBP],0
	JS	L49
	MOV	EAX,ESI
	MOV	EDX,DWORD [-16+EBP]
	SUB	EAX,EDI
	DEC	EDI
	LEA	EDX,DWORD [5+EDX+EAX*2]
	MOV	DWORD [-16+EBP],EDX
L33:
	INC	ESI
	CMP	ESI,EDI
	JL	L34
L35:
	CALL	_io_hlt
	JMP	L35
L49:
	MOV	EAX,DWORD [-16+EBP]
	LEA	EAX,DWORD [3+EAX+ESI*2]
	MOV	DWORD [-16+EBP],EAX
	JMP	L33
